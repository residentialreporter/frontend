{"version":3,"sources":["./src/app/components/password-reset/password-reset.component.html","./src/app/pages/password-reset/password-reset.module.ts","./src/app/pages/password-reset/password-reset-routing.module.ts","./src/app/pages/password-reset/password-reset-page.scss","./src/app/components/password-reset/password-reset.component.ts","./src/app/pages/password-reset/password-reset-page.component.html","./src/app/components/password-reset/password-reset.component.scss","./src/app/pages/password-reset/password-reset-page.component.ts"],"names":[],"mappings":"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","file":"residentialreporter-pages-password-reset-password-reset-module-es2015.js","sourcesContent":["export default \"\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IonicModule } from '@ionic/angular';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { PasswordResetPageComponent } from './password-reset-page.component';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatFormFieldModule } from '@angular/material/form-field';\n\nimport { PasswordResetPageRoutingModule } from './password-reset-routing.module';\nimport { MatInputModule } from '@angular/material/input';\nimport { PasswordResetComponent } from '@residentialreporter/components/password-reset/password-reset.component';\nimport { TranslateModule } from '@ngx-translate/core';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        IonicModule,\n        MatButtonModule,\n        MatCardModule,\n        MatFormFieldModule,\n        MatInputModule,\n        ReactiveFormsModule,\n        PasswordResetPageRoutingModule,\n        TranslateModule\n    ],\n    declarations: [PasswordResetPageComponent, PasswordResetComponent]\n})\nexport class PasswordResetPageModule {\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { PasswordResetPageComponent } from './password-reset-page.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: PasswordResetPageComponent,\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class PasswordResetPageRoutingModule {\n}\n","export default \"mat-card {\\n  max-width: 400px;\\n  margin: 2em auto;\\n  text-align: center;\\n}\\n\\nmat-form-field {\\n  display: block;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvcGFzc3dvcmQtcmVzZXQvcGFzc3dvcmQtcmVzZXQtcGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZ0JBQUE7RUFDQSxnQkFBQTtFQUNBLGtCQUFBO0FBQ0Y7O0FBRUE7RUFDRSxjQUFBO0FBQ0YiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9wYXNzd29yZC1yZXNldC9wYXNzd29yZC1yZXNldC1wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJtYXQtY2FyZCB7XG4gIG1heC13aWR0aDogNDAwcHg7XG4gIG1hcmdpbjogMmVtIGF1dG87XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxubWF0LWZvcm0tZmllbGQge1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuIl19 */\";","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { UserService } from '../../services/user/user.service';\nimport { TranslateModule } from '@ngx-translate/core';\n\n@Component({\n    selector: 'app-password-reset',\n    templateUrl: './password-reset.component.html',\n    styleUrls: ['./password-reset.component.scss'],\n})\n\nexport class PasswordResetComponent implements OnInit {\n    resetForm: FormGroup = new FormGroup({\n        address: new FormControl(),\n    });\n    public addressInvalid: boolean;\n    private formSubmitAttempt: boolean;\n    private returnUrl: string;\n\n    constructor(\n        private fb: FormBuilder,\n        private route: ActivatedRoute,\n        private router: Router,\n        private userService: UserService\n    ) {\n    }\n\n    async ngOnInit() {\n        this.returnUrl = this.route.snapshot.queryParams.returnUrl || '/home';\n        this.resetForm = this.fb.group({\n            address: ['', Validators.required],\n        });\n\n        // if (await this.userService.checkAuthenticated()) {\n        //    await this.router.navigate([this.returnUrl]);\n        // }\n    }\n\n    async onSubmit() {\n        this.formSubmitAttempt = false;\n        if (this.resetForm.valid) {\n            try {\n                const address = this.resetForm.get('address').value;\n                await this.userService.resetPassword(address);\n            } catch (err) {\n                this.addressInvalid = true;\n            }\n        } else {\n            this.formSubmitAttempt = true;\n        }\n    }\n}\n\n","export default \"<mat-card>\\n    <mat-card-content>\\n        <form (ngSubmit)=\\\"onSubmit()\\\" [formGroup]=\\\"resetForm\\\">\\n            <h2>{{ 'Reset password' | translate }}</h2>\\n\\n            <mat-form-field class=\\\"full-width-input\\\">\\n                <input formControlName=\\\"address\\\"\\n                       matInput\\n                       placeholder=\\\"{{ 'Email address' | translate }}\\\"\\n                       required>\\n                <mat-error>\\n                    {{ 'Please provide a valid email address' | translate }}\\n                </mat-error>\\n            </mat-form-field>\\n            <button color=\\\"primary\\\" mat-raised-button>{{ 'Send password reset link' | translate }}</button>\\n        </form>\\n    </mat-card-content>\\n</mat-card>\\n\";","export default \"mat-card {\\n  max-width: 400px;\\n  margin: 2em auto;\\n  text-align: center;\\n}\\n\\nmat-form-field {\\n  display: block;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9wYXNzd29yZC1yZXNldC9wYXNzd29yZC1yZXNldC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGdCQUFBO0VBQ0EsZ0JBQUE7RUFDQSxrQkFBQTtBQUNGOztBQUVBO0VBQ0UsY0FBQTtBQUNGIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9wYXNzd29yZC1yZXNldC9wYXNzd29yZC1yZXNldC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIm1hdC1jYXJkIHtcbiAgbWF4LXdpZHRoOiA0MDBweDtcbiAgbWFyZ2luOiAyZW0gYXV0bztcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG5tYXQtZm9ybS1maWVsZCB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4iXX0= */\";","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { UserService } from '@residentialreporter/services/user/user.service';\n\n\n@Component({\n    selector: 'app-password-reset-page',\n    templateUrl: 'password-reset-page.component.html',\n    styleUrls: ['./password-reset-page.scss'],\n})\nexport class PasswordResetPageComponent implements OnInit{\n    resetForm: FormGroup = new FormGroup({\n        address: new FormControl(),\n    });\n    public addressInvalid: boolean;\n    private formSubmitAttempt: boolean;\n    private returnUrl: string;\n\n    constructor(\n        private fb: FormBuilder,\n        private route: ActivatedRoute,\n        private router: Router,\n        private userService: UserService\n    ) {\n    }\n\n    async ngOnInit() {\n        this.returnUrl = this.route.snapshot.queryParams.returnUrl || '/home';\n        this.resetForm = this.fb.group({\n            address: ['', Validators.required],\n        });\n\n        // if (await this.userService.checkAuthenticated()) {\n        //    await this.router.navigate([this.returnUrl]);\n        // }\n    }\n\n    async onSubmit() {\n        this.formSubmitAttempt = false;\n        if (this.resetForm.valid) {\n            try {\n                const address = this.resetForm.get('address').value;\n                await this.userService.resetPassword(address);\n            } catch (err) {\n                this.addressInvalid = true;\n            }\n        } else {\n            this.formSubmitAttempt = true;\n        }\n    }\n}\n"],"sourceRoot":"webpack:///"}